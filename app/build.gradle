apply plugin: 'com.android.application'
apply plugin: "jacoco"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "nl.jmuijsenberg.androiddemo"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        // test application determines path to find cucumber options
        testApplicationId "nl.jmuijsenberg.androiddemo.app"

        // test runner used by cucumber
        testInstrumentationRunner "nl.jmuijsenberg.androiddemo.app.runner.CucumberTestRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled false
            buildConfigField "String", "TEST_TAGS", "\"${getTestTags()}\""
        }

        release {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // See http://tools.android.com/tech-docs/new-build-system/user-guide
    lintOptions {
        // if true, stop the gradle build if errors are found
        abortOnError false

        // if true, generate an XML report for use by for example Jenkins
        xmlReport true

        // required for butterknife see http://jakewharton.github.io/butterknife/
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

// Read Cucumber tags from command line like: ./gradlew connectedAndroidTest -Dtags="@login-scenarios,@kitkat"
def getTestTags() {
    return project.hasProperty("tags") ? project.getProperties().get("tags") : ""
}

// https://docs.gradle.org/current/userguide/sonar_runner_plugin.html
sonarRunner {
    sonarProperties {
        // See http://docs.sonarqube.org/display/PLUG/Android+Lint+Plugin
        property "sonar.android.lint.report", "${buildDir}/outputs/lint-results.xml"
    }
}

project(":app") {
    sonarRunner {
        sonarProperties {
            property "sonar.language", "java"

            // https://gist.github.com/hal9002/004946a4ca10965648bc
            property "sonar.sources", project.android.sourceSets.main.java.srcDirs
            property "sonar.java.libraries", project.android.applicationVariants.toList().first().javaCompile.classpath
            property "sonar.java.binaries", "$project.buildDir/intermediates/classes/debug"

            property "sonar.tests", project.android.applicationVariants.testVariant.javaCompile.source[0]
            property "sonar.junit.reportsPath", "build/outputs/androidTest-results/connected"
            property 'sonar.jacoco.reportPath', "build/outputs/code-coverage/connected/coverage.ec"
        }
    }
}

// Test coverage with Jacoco on Android gradle project with injection frameworks like Butterknife
// see https://gist.github.com/josomers/9f90b017e321c54bb918
task jacocoTestReport(type: JacocoReport, dependsOn: ['test']) {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            exclude: [
              '**/R*.class',
              '**/BuildConfig*',
              '**/*$*.class',
              '**/*$*.java']
    )

    sourceDirectories = files(['src/main/java'])
    executionData = fileTree(dir: rootProject.rootDir, includes: ['**/*.exec', '**/*.ec'])
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Module dependencies
    compile project(':repository')
    compile project(':repositorysqlite')
    compile project(':utilandroid')
    compile project(':utiljava')
    compile project(':viewmodels')
    compile project(':devices')
    compile project(':devicesandroid')
    compile project(':control')

    // ViewPager/RecycelerView/CardView support see https://developer.android.com/tools/support-library/features.html
    compile "com.android.support:support-v4:${supportLibraryVersion}"
    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${supportLibraryVersion}"

    // RxJava support
    compile "io.reactivex:rxjava:${rxjavaVersion}"

    // Stetho support see http://facebook.github.io/stetho/
    compile "com.facebook.stetho:stetho:${stethoVersion}"

    // ButterKnife support see http://jakewharton.github.io/butterknife/
    compile "com.jakewharton:butterknife:${butterknifeVersion}"

    // LeakCanary suppor see https://github.com/square/leakcanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:${leakcanaryVersion}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVersion}"

    // Cucumber support see https://github.com/neoranga55/CleanGUITestArchitecture
    androidTestCompile "com.google.dexmaker:dexmaker:${dexMakerVersion}"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:${dexMakerVersion}"

    androidTestCompile "info.cukes:cucumber-android:${cucumberVersion}"
    androidTestCompile "info.cukes:cucumber-picocontainer:${cucumberVersion}"

    androidTestCompile "com.android.support.test:runner:${androidTestVersion}"
    androidTestCompile "com.android.support.test:rules:${androidTestVersion}"

    androidTestCompile "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${espressoVersion}") {
        exclude module: 'recyclerview-v7'
    }
}