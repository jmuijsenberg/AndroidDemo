apply plugin: 'com.android.application'
apply plugin: "jacoco"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "nl.jmuijsenberg.androiddemo"
        minSdkVersion 22
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled false
        }

        release {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // See http://tools.android.com/tech-docs/new-build-system/user-guide
    lintOptions {
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, generate an XML report for use by for example Jenkins
        xmlReport true
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

// https://docs.gradle.org/current/userguide/sonar_runner_plugin.html
sonarRunner {
    sonarProperties {
        // See http://docs.sonarqube.org/display/PLUG/Android+Lint+Plugin
        property "sonar.android.lint.report", "${buildDir}/outputs/lint-results.xml"
    }
}

project(":app") {
    sonarRunner {
        sonarProperties {
            property "sonar.language", "java"

            // https://gist.github.com/hal9002/004946a4ca10965648bc
            property "sonar.sources", project.android.sourceSets.main.java.srcDirs
            property "sonar.java.libraries", project.android.applicationVariants.toList().first().javaCompile.classpath
            property "sonar.java.binaries", "$project.buildDir/intermediates/classes/debug"

            property "sonar.tests", project.android.applicationVariants.testVariant.javaCompile.source[0]
            property "sonar.junit.reportsPath", "build/outputs/androidTest-results/connected"
            property 'sonar.jacoco.reportPath', "build/outputs/code-coverage/connected/coverage.ec"
        }
    }
}

// See https://plus.google.com/+OleksandrKucherenko/posts/6vNWkkLed3b
task jacocoTestReport(type: JacocoReport, dependsOn: ['test']) {
    description = "Generates Jacoco coverage reports: XML and HTML"
    group = "Reporting"

    // use hidden configuration, for details look into JacocoPlugin.groovy
    jacocoClasspath = project.configurations['androidJacocoAnt']

    classDirectories = files(fileTree(dir: 'build/intermediates/classes/debug', excludes: [
            '*/R.class', '*/R$.class', '*/BuildConfig.', '*/Manifest*.*']))

    sourceDirectories = files(['src/main/java'])
    executionData = fileTree(dir: rootProject.rootDir, includes: ['**/*.exec', '**/*.ec'])

    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Module dependencies
    compile project(':repository')
    compile project(':repositorysqlite')
    compile project(':utilandroid')
    compile project(':utiljava')
    compile project(':viewmodels')
    compile project(':devices')
    compile project(':devicesandroid')
    compile project(':control')

    // RxJava support
    compile 'io.reactivex:rxjava:1.0.12'
}